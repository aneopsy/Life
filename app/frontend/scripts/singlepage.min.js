(function (window, location, history, document) {
	var base_path = ".";///js/2016/kaspersky.earth-test";
	var iframe_path = base_path + "/frontend";


	function EventDispatcher(){
		this.listeners = {};
	}
	EventDispatcher.prototype.on = function (type, listener) {
		this.listeners[type] = this.listeners[type] || [];
		this.listeners[type].push(listener);
	};
	EventDispatcher.prototype.trigger = function (type, data) {
		if (this.listeners[type]) {
			this.listeners[type].forEach(function (listener) {
				if (typeof listener === "function") {
					listener(type, data);
				}
			});
		}
	};
	function KavWindow(path) {
		var self = this;
		EventDispatcher.prototype.constructor.apply(this);

		this.origin = new RegExp("^(" + location.origin + ")?" + path);

		this.path = function (val, hashOnly) {
			if (arguments.length > 0) {
				this.setPath( location.origin + path + val, hashOnly );
				return this;
			} else {
				return relative( this.getPath() );
			}
		};

		this.setPath = function (val) {};
		this.getPath = function () { return ""; };

		function relative(href) {
			//if(href.search(self.origin) == -1){
			return href && href.replace(self.origin, "");
		}
	}
	KavWindow.prototype = Object.create(EventDispatcher.prototype);
	KavWindow.prototype.constructor = KavWindow;


	function IFrame(path){
		KavWindow.prototype.constructor.apply(this, [path]);
		var _silentChange, _path;
		var iframe, iLocation, iWindow, self = this;

		iframe = this.domElement = document.createElement("iframe");
		iframe.frameBorder = "0";



		function onUnload(){
			if (!_silentChange) {
				setTimeout(afterUnload, 1);
			}
			_silentChange = undefined;
		}

		function afterUnload(){
			iLocation = iWindow.location;
			iWindow.addEventListener("unload", onUnload);
			iWindow.addEventListener("hashchange", onIHashchange);

			self.trigger("change");//, _path = iLocation.href);
		}


		function onIHashchange(){
			self.trigger("change");
		}



		this.init = function () {
			iWindow = iframe.contentWindow;
			iWindow.addEventListener("unload", onUnload);
		};

		/*this.navigate = function (src, silentChange) {
			_silentChange = silentChange;
			if (iframe.src) {
				iWindow.kaspersky.navigateTo( "frontend/" + src );
			} else {
				iframe.src = src;
			}
		};*/


		this.getPath = function () { return iLocation.href; };
		this.setPath = function (src, hashOnly) {
			console.log("src " + src);
			console.log("hashOnly " + hashOnly);
			if (!hashOnly && iframe.src) {
				iWindow.kaspersky.navigateTo( src );
			} else {
				iframe.src = src;
			}
		};



		this.setHash = function (hash) {
			iLocation.hash = hash;
		};
	}
	IFrame.prototype = Object.create(KavWindow.prototype);
	IFrame.prototype.constructor = IFrame;





	function Singlepage(path){
		var _replace = new RegExp("^(" + path + "/[^/]+)/");
		KavWindow.prototype.constructor.apply(this, [path]);
		var self = this;
		//var _path = location.hash.substr(1) || "/";


		var setPath = history && typeof history.pushState === "function" ? replacePath : hashPath;

		window.addEventListener("load", onReady);
		window.addEventListener("hashchange", onChange);
		//window.addEventListener("statechange", onChange);


		function onReady(){self.trigger("ready");}
		function onChange(){self.trigger("change");}




		function hashPath(src) {location.hash = src;}
		function replacePath(src){
			history.replaceState(null, null, src);
		}


		/*function getPath(){
			var href = location.pathname;

			return (href.substr(0, href.length - 1) || "index") + ".html" + location.search + location.hash;
		}*/




		this.getPath = function () {
			var path = ([location.pathname.replace(_replace, "$1.html"), location.search, location.hash].join(""));
			return path;
		};
		this.setPath = function (src) {
			if(src.search('/l-sw/') !== -1){
				window.location = '/';
			}
			setPath( src.replace(".html", "/") );
		};
	}
	Singlepage.prototype = Object.create(KavWindow.prototype);
	Singlepage.prototype.constructor = Singlepage;










	(function () {
		var iframe = new IFrame(iframe_path);
		iframe.on("change", onIChange);

		var singlepage = new Singlepage(base_path);
		singlepage.on("ready", onReady);
		singlepage.on("change", onChange);

		document.body.appendChild(iframe.domElement);


		function onReady(){
			iframe.init();
			//iframe.navigate( relative( singlepage.path ) );
			updateIFrame();
		}



		function onChange(){
			updateIFrame(true);
			//iframe.navigate( relative( href ), true );
		}
		function onIChange(){
			//singlepage.navigate( base_path + relative( iframe.path ) );
			updateSinglepage();
		}



		function updateSinglepage(){
			singlepage.path( iframe.path() );
		}
		function updateIFrame(hashOnly){
			iframe.path( singlepage.path(), hashOnly );
		}
	}());
}(window, window.location, history, document));
